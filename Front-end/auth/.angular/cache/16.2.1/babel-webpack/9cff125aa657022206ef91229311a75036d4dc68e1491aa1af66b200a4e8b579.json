{"ast":null,"code":"var _class;\nimport { FormGroup } from '@angular/forms';\nimport { User } from 'src/app/model/user';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/service.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction LoginComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"form\", 2);\n    i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_div_0_Template_form_ngSubmit_1_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onSubmit());\n    });\n    i0.ɵɵelement(2, \"img\", 3);\n    i0.ɵɵelementStart(3, \"h1\", 4);\n    i0.ɵɵtext(4, \"Login into Your Account\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"label\", 5);\n    i0.ɵɵtext(6, \"Email address\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"input\", 6);\n    i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_div_0_Template_input_ngModelChange_7_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.user.email = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"label\", 7);\n    i0.ɵɵtext(9, \"Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"input\", 8);\n    i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_div_0_Template_input_ngModelChange_10_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.user.password = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 9)(12, \"label\");\n    i0.ɵɵelement(13, \"input\", 10);\n    i0.ɵɵtext(14, \" Remember me \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"button\", 11);\n    i0.ɵɵtext(16, \"Sign in\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"p\", 12);\n    i0.ɵɵtext(18, \"\\u00A9 2017-2018\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.userForm);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.user.email);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.user.password);\n  }\n}\nexport class LoginComponent {\n  constructor(service, router) {\n    this.service = service;\n    this.router = router;\n    this.user = new User();\n    this.userForm = new FormGroup({});\n    this.formError = \"\";\n  }\n  ngOnInit() {\n    if (localStorage.getItem(\"token\")) {\n      this.router.navigate(['/main']);\n    }\n  }\n  LoginUser() {\n    this.service.loginUser(this.user).subscribe({\n      next: res => {\n        const token = JSON.stringify(res);\n        //const dataTobeSave=JSON.parse(token);\n        console.log(token);\n        // localStorage.setItem(\"email\",res.email)\n        //  localStorage.setItem(\"token\",token)\n        // localStorage.setItem(\"token\",'sass')\n        //localStorage.setItem(\"email\",res['email'])\n        localStorage.setItem(\"token\", token);\n        //  localStorage.setItem(\"email\",res.email)\n        this.router.navigate(['/', 'get']);\n      },\n      error: error => console.error(error),\n      complete: () => console.info('User Registered')\n    });\n  }\n  onSubmit() {\n    console.log(this.user);\n    this.LoginUser();\n  }\n}\n_class = LoginComponent;\n_class.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ServiceService), i0.ɵɵdirectiveInject(i2.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-login\"]],\n  decls: 1,\n  vars: 1,\n  consts: [[\"class\", \"container text-center\", 4, \"ngIf\"], [1, \"container\", \"text-center\"], [1, \"form-signin\", 3, \"formGroup\", \"ngSubmit\"], [\"src\", \"https://getbootstrap.com/docs/4.0/assets/brand/bootstrap-solid.svg\", \"alt\", \"\", \"width\", \"72\", \"height\", \"72\", 1, \"mb-4\"], [1, \"h3\", \"mb-3\", \"font-weight-normal\"], [\"for\", \"inputEmail\", 1, \"sr-only\"], [\"type\", \"email\", \"name\", \"user.email\", \"placeholder\", \"Email address\", \"required\", \"\", \"autofocus\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"inputPassword\", 1, \"sr-only\"], [\"type\", \"password\", \"name\", \"user.password\", \"placeholder\", \"Password\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"checkbox\", \"mb-3\"], [\"type\", \"checkbox\", \"value\", \"remember-me\"], [\"type\", \"submit\", 1, \"btn\", \"btn-lg\", \"btn-primary\", \"btn-block\"], [1, \"mt-5\", \"mb-3\", \"text-muted\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, LoginComponent_div_0_Template, 19, 3, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.formError != \"\");\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.FormGroupDirective],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["FormGroup","User","i0","ɵɵelementStart","ɵɵlistener","LoginComponent_div_0_Template_form_ngSubmit_1_listener","ɵɵrestoreView","_r2","ctx_r1","ɵɵnextContext","ɵɵresetView","onSubmit","ɵɵelement","ɵɵtext","ɵɵelementEnd","LoginComponent_div_0_Template_input_ngModelChange_7_listener","$event","ctx_r3","user","email","LoginComponent_div_0_Template_input_ngModelChange_10_listener","ctx_r4","password","ɵɵadvance","ɵɵproperty","ctx_r0","userForm","LoginComponent","constructor","service","router","formError","ngOnInit","localStorage","getItem","navigate","LoginUser","loginUser","subscribe","next","res","token","JSON","stringify","console","log","setItem","error","complete","info","ɵɵdirectiveInject","i1","ServiceService","i2","Router","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵtemplate","LoginComponent_div_0_Template"],"sources":["C:\\Users\\devjy\\OneDrive\\Desktop\\Auth_RestAPI\\Front-end\\auth\\src\\app\\component\\login\\login.component.ts","C:\\Users\\devjy\\OneDrive\\Desktop\\Auth_RestAPI\\Front-end\\auth\\src\\app\\component\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthResponse } from 'src/app/model/authResponse';\nimport { User } from 'src/app/model/user';\nimport { ServiceService } from 'src/app/service/service.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n  user:User=new User();\n  userForm: FormGroup = new FormGroup({})\n  formError = \"\"\n\n  \n  constructor(private service:ServiceService,private router:Router){}\n\n  \n\n  ngOnInit(): void {\n\n    if(localStorage.getItem(\"token\")){\n      this.router.navigate(['/main'])\n    }\n  }\n\n\n\n\n  LoginUser(){\n    this.service.loginUser(this.user).subscribe({\n      next: (res) =>{\n\n        \n\n\n        const token=JSON.stringify(res);\n        //const dataTobeSave=JSON.parse(token);\n\n        console.log(token);\n        // localStorage.setItem(\"email\",res.email)\n        //  localStorage.setItem(\"token\",token)\n\n        // localStorage.setItem(\"token\",'sass')\n   //localStorage.setItem(\"email\",res['email'])\n     localStorage.setItem(\"token\",token);\n\n\n      //  localStorage.setItem(\"email\",res.email)\n        this.router.navigate(['/','get'])\n      },\n      error: (error) => console.error(error),\n      complete: () => console.info('User Registered') \n\n  })\n\n  \n  }\n\n  onSubmit(){\n    console.log(this.user)\n    this.LoginUser();\n  }\n\n\n}\n","<div class=\"container text-center\" *ngIf=\"formError!=''\">\n    <form class=\"form-signin\" (ngSubmit)=\"onSubmit()\" [formGroup]=\"userForm\">\n      <img class=\"mb-4\" src=\"https://getbootstrap.com/docs/4.0/assets/brand/bootstrap-solid.svg\" alt=\"\" width=\"72\" height=\"72\">\n      <h1 class=\"h3 mb-3 font-weight-normal\">Login into Your Account</h1>\n  \n       \n      <label for=\"inputEmail\" class=\"sr-only\">Email address</label>\n      <input type=\"email\"  class=\"form-control\" [(ngModel)]=\"user.email\" name=\"user.email\" placeholder=\"Email address\" required=\"\" autofocus=\"\">\n  \n      \n      <label for=\"inputPassword\" class=\"sr-only\">Password</label>\n      <input type=\"password\"  class=\"form-control\" [(ngModel)]=\"user.password\" name=\"user.password\" placeholder=\"Password\" required=\"\">\n      <div class=\"checkbox mb-3\">\n        <label>\n          <input type=\"checkbox\" value=\"remember-me\"> Remember me\n        </label>\n      </div>\n      <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign in</button>\n      <p class=\"mt-5 mb-3 text-muted\">© 2017-2018</p>\n    </form>\n  </div>\n\n\n"],"mappings":";AACA,SAASA,SAAS,QAAQ,gBAAgB;AAG1C,SAASC,IAAI,QAAQ,oBAAoB;;;;;;;;;ICJzCC,EAAA,CAAAC,cAAA,aAAyD;IAC3BD,EAAA,CAAAE,UAAA,sBAAAC,uDAAA;MAAAH,EAAA,CAAAI,aAAA,CAAAC,GAAA;MAAA,MAAAC,MAAA,GAAAN,EAAA,CAAAO,aAAA;MAAA,OAAYP,EAAA,CAAAQ,WAAA,CAAAF,MAAA,CAAAG,QAAA,EAAU;IAAA,EAAC;IAC/CT,EAAA,CAAAU,SAAA,aAAyH;IACzHV,EAAA,CAAAC,cAAA,YAAuC;IAAAD,EAAA,CAAAW,MAAA,8BAAuB;IAAAX,EAAA,CAAAY,YAAA,EAAK;IAGnEZ,EAAA,CAAAC,cAAA,eAAwC;IAAAD,EAAA,CAAAW,MAAA,oBAAa;IAAAX,EAAA,CAAAY,YAAA,EAAQ;IAC7DZ,EAAA,CAAAC,cAAA,eAA0I;IAAhGD,EAAA,CAAAE,UAAA,2BAAAW,6DAAAC,MAAA;MAAAd,EAAA,CAAAI,aAAA,CAAAC,GAAA;MAAA,MAAAU,MAAA,GAAAf,EAAA,CAAAO,aAAA;MAAA,OAAaP,EAAA,CAAAQ,WAAA,CAAAO,MAAA,CAAAC,IAAA,CAAAC,KAAA,GAAAH,MAAA,CAAkB;IAAA,EAAP;IAAlEd,EAAA,CAAAY,YAAA,EAA0I;IAG1IZ,EAAA,CAAAC,cAAA,eAA2C;IAAAD,EAAA,CAAAW,MAAA,eAAQ;IAAAX,EAAA,CAAAY,YAAA,EAAQ;IAC3DZ,EAAA,CAAAC,cAAA,gBAAiI;IAApFD,EAAA,CAAAE,UAAA,2BAAAgB,8DAAAJ,MAAA;MAAAd,EAAA,CAAAI,aAAA,CAAAC,GAAA;MAAA,MAAAc,MAAA,GAAAnB,EAAA,CAAAO,aAAA;MAAA,OAAaP,EAAA,CAAAQ,WAAA,CAAAW,MAAA,CAAAH,IAAA,CAAAI,QAAA,GAAAN,MAAA,CAAqB;IAAA,EAAP;IAAxEd,EAAA,CAAAY,YAAA,EAAiI;IACjIZ,EAAA,CAAAC,cAAA,cAA2B;IAEvBD,EAAA,CAAAU,SAAA,iBAA2C;IAACV,EAAA,CAAAW,MAAA,qBAC9C;IAAAX,EAAA,CAAAY,YAAA,EAAQ;IAEVZ,EAAA,CAAAC,cAAA,kBAA+D;IAAAD,EAAA,CAAAW,MAAA,eAAO;IAAAX,EAAA,CAAAY,YAAA,EAAS;IAC/EZ,EAAA,CAAAC,cAAA,aAAgC;IAAAD,EAAA,CAAAW,MAAA,wBAAW;IAAAX,EAAA,CAAAY,YAAA,EAAI;;;;IAjBCZ,EAAA,CAAAqB,SAAA,GAAsB;IAAtBrB,EAAA,CAAAsB,UAAA,cAAAC,MAAA,CAAAC,QAAA,CAAsB;IAM5BxB,EAAA,CAAAqB,SAAA,GAAwB;IAAxBrB,EAAA,CAAAsB,UAAA,YAAAC,MAAA,CAAAP,IAAA,CAAAC,KAAA,CAAwB;IAIrBjB,EAAA,CAAAqB,SAAA,GAA2B;IAA3BrB,EAAA,CAAAsB,UAAA,YAAAC,MAAA,CAAAP,IAAA,CAAAI,QAAA,CAA2B;;;ADC9E,OAAM,MAAOK,cAAc;EAOzBC,YAAoBC,OAAsB,EAASC,MAAa;IAA5C,KAAAD,OAAO,GAAPA,OAAO;IAAwB,KAAAC,MAAM,GAANA,MAAM;IALzD,KAAAZ,IAAI,GAAM,IAAIjB,IAAI,EAAE;IACpB,KAAAyB,QAAQ,GAAc,IAAI1B,SAAS,CAAC,EAAE,CAAC;IACvC,KAAA+B,SAAS,GAAG,EAAE;EAGoD;EAIlEC,QAAQA,CAAA;IAEN,IAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAC;MAC/B,IAAI,CAACJ,MAAM,CAACK,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;;EAEnC;EAKAC,SAASA,CAAA;IACP,IAAI,CAACP,OAAO,CAACQ,SAAS,CAAC,IAAI,CAACnB,IAAI,CAAC,CAACoB,SAAS,CAAC;MAC1CC,IAAI,EAAGC,GAAG,IAAI;QAKZ,MAAMC,KAAK,GAACC,IAAI,CAACC,SAAS,CAACH,GAAG,CAAC;QAC/B;QAEAI,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;QAClB;QACA;QAEA;QACL;QACER,YAAY,CAACa,OAAO,CAAC,OAAO,EAACL,KAAK,CAAC;QAGlC;QACE,IAAI,CAACX,MAAM,CAACK,QAAQ,CAAC,CAAC,GAAG,EAAC,KAAK,CAAC,CAAC;MACnC,CAAC;MACDY,KAAK,EAAGA,KAAK,IAAKH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;MACtCC,QAAQ,EAAEA,CAAA,KAAMJ,OAAO,CAACK,IAAI,CAAC,iBAAiB;KAEjD,CAAC;EAGF;EAEAtC,QAAQA,CAAA;IACNiC,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC3B,IAAI,CAAC;IACtB,IAAI,CAACkB,SAAS,EAAE;EAClB;;SAtDWT,cAAc;;mBAAdA,MAAc,EAAAzB,EAAA,CAAAgD,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAlD,EAAA,CAAAgD,iBAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;;QAAd3B,MAAc;EAAA4B,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCZ3B3D,EAAA,CAAA6D,UAAA,IAAAC,6BAAA,kBAoBQ;;;MApB4B9D,EAAA,CAAAsB,UAAA,SAAAsC,GAAA,CAAA/B,SAAA,OAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}